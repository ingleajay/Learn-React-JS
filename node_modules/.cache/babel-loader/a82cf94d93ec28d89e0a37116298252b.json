{"ast":null,"code":"var _jsxFileName = \"F:\\\\ReactJs\\\\learnreact\\\\src\\\\components\\\\UseCallbackHook.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useCallback } from 'react';\nimport { useState } from 'react'; // The React useCallback Hook returns a memoized callback function.\n//This allows us to isolate resource intensive functions so that they will not automatically run on every render.\n//The useCallback Hook only runs when one of its dependencies update.\n//This can improve performance.\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UseCallbackHook = () => {\n  _s();\n\n  const [diary, setDiary] = useState([]);\n  const [val, setVal] = useState(0);\n  const addDiary = useCallback(() => {\n    setDiary(prev => [...prev, 'new Entry']);\n  }, [diary]);\n\n  const setValue = () => {\n    setVal(val + 1);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Diary, {\n      diary: diary,\n      addDiary: addDiary\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: val\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setValue(),\n      children: \"Click\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UseCallbackHook, \"x2Zgq4dRBbFCt444jdWsVsX96uQ=\");\n\n_c = UseCallbackHook;\nexport { UseCallbackHook };\n\nvar _c;\n\n$RefreshReg$(_c, \"UseCallbackHook\");","map":{"version":3,"names":["React","useCallback","useState","UseCallbackHook","diary","setDiary","val","setVal","addDiary","prev","setValue"],"sources":["F:/ReactJs/learnreact/src/components/UseCallbackHook.js"],"sourcesContent":["import React from 'react'\r\nimport { useCallback } from 'react'\r\nimport { useState } from 'react'\r\n\r\n// The React useCallback Hook returns a memoized callback function.\r\n//This allows us to isolate resource intensive functions so that they will not automatically run on every render.\r\n//The useCallback Hook only runs when one of its dependencies update.\r\n//This can improve performance.\r\n\r\nconst UseCallbackHook = () => {\r\n\r\n  const [diary,setDiary] = useState([]);\r\n  const [val,setVal] = useState(0);\r\n  \r\n  const addDiary = useCallback(()=>{\r\n    setDiary((prev)=>[...prev,'new Entry']);\r\n  },[diary]);\r\n\r\n  const setValue = () => {\r\n    setVal(val+1);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n        <Diary diary={diary} addDiary={addDiary}/>\r\n        <h4>{val}</h4>\r\n        <button onClick={()=>setValue()}>Click</button>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport {UseCallbackHook}"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,OAA5B;AACA,SAASC,QAAT,QAAyB,OAAzB,C,CAEA;AACA;AACA;AACA;;;;AAEA,MAAMC,eAAe,GAAG,MAAM;EAAA;;EAE5B,MAAM,CAACC,KAAD,EAAOC,QAAP,IAAmBH,QAAQ,CAAC,EAAD,CAAjC;EACA,MAAM,CAACI,GAAD,EAAKC,MAAL,IAAeL,QAAQ,CAAC,CAAD,CAA7B;EAEA,MAAMM,QAAQ,GAAGP,WAAW,CAAC,MAAI;IAC/BI,QAAQ,CAAEI,IAAD,IAAQ,CAAC,GAAGA,IAAJ,EAAS,WAAT,CAAT,CAAR;EACD,CAF2B,EAE1B,CAACL,KAAD,CAF0B,CAA5B;;EAIA,MAAMM,QAAQ,GAAG,MAAM;IACrBH,MAAM,CAACD,GAAG,GAAC,CAAL,CAAN;EACD,CAFD;;EAIA,oBACE;IAAA,wBACI,QAAC,KAAD;MAAO,KAAK,EAAEF,KAAd;MAAqB,QAAQ,EAAEI;IAA/B;MAAA;MAAA;MAAA;IAAA,QADJ,eAEI;MAAA,UAAKF;IAAL;MAAA;MAAA;MAAA;IAAA,QAFJ,eAGI;MAAQ,OAAO,EAAE,MAAII,QAAQ,EAA7B;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAHJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAOD,CApBD;;GAAMP,e;;KAAAA,e;AAuBN,SAAQA,eAAR"},"metadata":{},"sourceType":"module"}