{"ast":null,"code":"var _jsxFileName = \"F:\\\\ReactJs\\\\learnreact\\\\src\\\\components\\\\Hooks\\\\UseLayoutEffectHook.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useEffect } from 'react'; // The useLayoutEffect works similarly to useEffect but rather working asynchronously like useEffect hook, \n// it fires synchronously after all DOM loading is done loading. This is useful for synchronously re-rendering the DOM and  \n//also to read the layout from the DOM. But to prevent blocking the page loading, we should always use useEffect hook.\n// if we want to run first time without updating your components go with use layout effect\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UseLayoutEffectHook = () => {\n  _s();\n\n  useEffect(() => {\n    console.log(\"First use effect\");\n  });\n  useEffect(() => {\n    console.log(\"Second use effect\");\n  });\n  useEffect(() => {\n    console.log(\"Third use effect\");\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"UseLayoutEffectHook\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UseLayoutEffectHook, \"ewq31d5h+FnD/qJW52w5UqeNMN4=\");\n\n_c = UseLayoutEffectHook;\nexport default UseLayoutEffectHook;\n\nvar _c;\n\n$RefreshReg$(_c, \"UseLayoutEffectHook\");","map":{"version":3,"names":["React","useEffect","UseLayoutEffectHook","console","log"],"sources":["F:/ReactJs/learnreact/src/components/Hooks/UseLayoutEffectHook.js"],"sourcesContent":["import React from 'react'\r\nimport { useEffect } from 'react'\r\n// The useLayoutEffect works similarly to useEffect but rather working asynchronously like useEffect hook, \r\n// it fires synchronously after all DOM loading is done loading. This is useful for synchronously re-rendering the DOM and  \r\n//also to read the layout from the DOM. But to prevent blocking the page loading, we should always use useEffect hook.\r\n\r\n// if we want to run first time without updating your components go with use layout effect\r\n\r\nconst UseLayoutEffectHook = () => {\r\n\r\n  useEffect(()=>{\r\n    console.log(\"First use effect\")\r\n  })  \r\n\r\n  useEffect(()=>{\r\n    console.log(\"Second use effect\")\r\n  })  \r\n\r\n  useEffect(()=>{\r\n    console.log(\"Third use effect\")\r\n  })  \r\n\r\n  return (\r\n    <div>UseLayoutEffectHook</div>\r\n  )\r\n}\r\n\r\nexport default UseLayoutEffectHook"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,OAA1B,C,CACA;AACA;AACA;AAEA;;;;AAEA,MAAMC,mBAAmB,GAAG,MAAM;EAAA;;EAEhCD,SAAS,CAAC,MAAI;IACZE,OAAO,CAACC,GAAR,CAAY,kBAAZ;EACD,CAFQ,CAAT;EAIAH,SAAS,CAAC,MAAI;IACZE,OAAO,CAACC,GAAR,CAAY,mBAAZ;EACD,CAFQ,CAAT;EAIAH,SAAS,CAAC,MAAI;IACZE,OAAO,CAACC,GAAR,CAAY,kBAAZ;EACD,CAFQ,CAAT;EAIA,oBACE;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAGD,CAjBD;;GAAMF,mB;;KAAAA,mB;AAmBN,eAAeA,mBAAf"},"metadata":{},"sourceType":"module"}