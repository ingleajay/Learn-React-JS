{"ast":null,"code":"var _jsxFileName = \"F:\\\\ReactJs\\\\learnreact\\\\src\\\\components\\\\UseRefHookEx.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useRef } from 'react'; // If we don’t to use useState hook you can use useRef like with useState you will have \n// to write more code but if you want to only read data and not to change anything then you can go with useref\n// Here it is uncontrolled components because it’s not controlled by react cause you set value like \n// normally not by state so it’s not good but benefit like has less code\n//useRef() only returns one item. It returns an Object called current.\n//When we initialize useRef we set the initial value: useRef(0).\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UseRefHookEx = () => {\n  _s();\n\n  const ename = useRef();\n  const eage = useRef();\n\n  const displayData = () => {\n    console.log(ename.current.value + \" \" + eage.current.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      ref: ename\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Add Age\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      ref: eage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: displayData,\n      children: \"Focus Input\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UseRefHookEx, \"LrjKfjfm43UM4NUAg7Rym6C9AjA=\");\n\n_c = UseRefHookEx;\nexport default UseRefHookEx;\n\nvar _c;\n\n$RefreshReg$(_c, \"UseRefHookEx\");","map":{"version":3,"names":["React","useRef","UseRefHookEx","ename","eage","displayData","console","log","current","value"],"sources":["F:/ReactJs/learnreact/src/components/UseRefHookEx.js"],"sourcesContent":["import React from 'react'\r\nimport { useRef } from 'react';\r\n\r\n// If we don’t to use useState hook you can use useRef like with useState you will have \r\n// to write more code but if you want to only read data and not to change anything then you can go with useref\r\n// Here it is uncontrolled components because it’s not controlled by react cause you set value like \r\n// normally not by state so it’s not good but benefit like has less code\r\n\r\n//useRef() only returns one item. It returns an Object called current.\r\n//When we initialize useRef we set the initial value: useRef(0).\r\n\r\nconst UseRefHookEx = () => {\r\n\r\n  const ename = useRef();\r\n  const eage = useRef();\r\n\r\n  const displayData = () => { \r\n    console.log(ename.current.value + \" \" + eage.current.value);\r\n  }\r\n    \r\n  return (\r\n    <div>\r\n        <input \r\n         type=\"text\" ref={ename}/>\r\n         <label>Add Age</label>\r\n         <input \r\n         type=\"number\"  ref={eage}/>\r\n         <button onClick={displayData}>Focus Input</button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default UseRefHookEx"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,OAAvB,C,CAEA;AACA;AACA;AACA;AAEA;AACA;;;;AAEA,MAAMC,YAAY,GAAG,MAAM;EAAA;;EAEzB,MAAMC,KAAK,GAAGF,MAAM,EAApB;EACA,MAAMG,IAAI,GAAGH,MAAM,EAAnB;;EAEA,MAAMI,WAAW,GAAG,MAAM;IACxBC,OAAO,CAACC,GAAR,CAAYJ,KAAK,CAACK,OAAN,CAAcC,KAAd,GAAsB,GAAtB,GAA4BL,IAAI,CAACI,OAAL,CAAaC,KAArD;EACD,CAFD;;EAIA,oBACE;IAAA,wBACI;MACC,IAAI,EAAC,MADN;MACa,GAAG,EAAEN;IADlB;MAAA;MAAA;MAAA;IAAA,QADJ,eAGK;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAHL,eAIK;MACA,IAAI,EAAC,QADL;MACe,GAAG,EAAEC;IADpB;MAAA;MAAA;MAAA;IAAA,QAJL,eAMK;MAAQ,OAAO,EAAEC,WAAjB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QANL;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAUD,CAnBD;;GAAMH,Y;;KAAAA,Y;AAqBN,eAAeA,YAAf"},"metadata":{},"sourceType":"module"}