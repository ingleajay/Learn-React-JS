{"ast":null,"code":"var _jsxFileName = \"F:\\\\ReactJs\\\\learnreact\\\\src\\\\components\\\\UseEffectHookEx.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState } from 'react';\nimport { useEffect } from 'react'; //The useEffect Hook allows you to perform side effects in your components.\n//Some examples of side effects are: fetching data, directly updating the DOM, and timers.\n//useEffect accepts two arguments. The second argument is optional.\n//useEffect(<function>, <dependency>)\n// 1. No dependency passed:\n// useEffect(() => {\n//   //Runs on every render\n// });\n// 2. An empty array:\n// useEffect(() => {\n//   //Runs only on the first render\n// }, []);\n// 3. Props or state values:\n// useEffect(() => {\n//   //Runs on the first render\n//   //And any time any dependency value changes\n// }, [prop, state]);\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UseEffectHookEx = () => {\n  _s();\n\n  const [count, setCount] = useState(0);\n  useEffect(() => {\n    setTimeout(() => {\n      setCount(count => count + 1);\n    }, 1000);\n  }, [count]);\n  return /*#__PURE__*/_jsxDEV(\"h5\", {\n    children: [\"I've rendered \", count, \" times!\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 10\n  }, this);\n};\n\n_s(UseEffectHookEx, \"/xL7qdScToREtqzbt5GZ1kHtYjQ=\");\n\n_c = UseEffectHookEx;\nexport default UseEffectHookEx;\n\nvar _c;\n\n$RefreshReg$(_c, \"UseEffectHookEx\");","map":{"version":3,"names":["React","useState","useEffect","UseEffectHookEx","count","setCount","setTimeout"],"sources":["F:/ReactJs/learnreact/src/components/UseEffectHookEx.js"],"sourcesContent":["import React from 'react'\r\nimport { useState } from 'react';\r\nimport { useEffect } from 'react';\r\n\r\n//The useEffect Hook allows you to perform side effects in your components.\r\n//Some examples of side effects are: fetching data, directly updating the DOM, and timers.\r\n//useEffect accepts two arguments. The second argument is optional.\r\n//useEffect(<function>, <dependency>)\r\n\r\n// 1. No dependency passed:\r\n// useEffect(() => {\r\n//   //Runs on every render\r\n// });\r\n\r\n// 2. An empty array:\r\n// useEffect(() => {\r\n//   //Runs only on the first render\r\n// }, []);\r\n\r\n// 3. Props or state values:\r\n// useEffect(() => {\r\n//   //Runs on the first render\r\n//   //And any time any dependency value changes\r\n// }, [prop, state]);\r\n\r\nconst UseEffectHookEx = () => {\r\n\r\n  const [count, setCount] = useState(0);\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      setCount((count) => count + 1);\r\n    }, 1000);\r\n  },[count]);\r\n\r\n  return <h5>I've rendered {count} times!</h5>;\r\n}\r\n\r\nexport default UseEffectHookEx"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,SAAT,QAA0B,OAA1B,C,CAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;;;AAEA,MAAMC,eAAe,GAAG,MAAM;EAAA;;EAE5B,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,CAAD,CAAlC;EAEAC,SAAS,CAAC,MAAM;IACdI,UAAU,CAAC,MAAM;MACfD,QAAQ,CAAED,KAAD,IAAWA,KAAK,GAAG,CAApB,CAAR;IACD,CAFS,EAEP,IAFO,CAAV;EAGD,CAJQ,EAIP,CAACA,KAAD,CAJO,CAAT;EAMA,oBAAO;IAAA,6BAAmBA,KAAnB;EAAA;IAAA;IAAA;IAAA;EAAA,QAAP;AACD,CAXD;;GAAMD,e;;KAAAA,e;AAaN,eAAeA,eAAf"},"metadata":{},"sourceType":"module"}