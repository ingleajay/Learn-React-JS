{"ast":null,"code":"var _jsxFileName = \"F:\\\\ReactJs\\\\learnreact\\\\src\\\\components\\\\UseContextHookEx.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React from 'react';\nimport { useContext } from 'react'; // React Context is a way to manage state globally.\n//State should be held by the highest parent component in the stack that requires access to the state.\n//To illustrate, we have many nested components. The component at the top and bottom of the stack need access to the state.\n// To do this without Context, we will need to pass the state as \"props\" through each nested component. This is called \"prop drilling\".\n// c1 (parent), c2, c3, c4,c5 => you need data from parent to c5 so use context rather than passing all props in all child.\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst C1 = () => {\n  _s();\n\n  const [user, setUser] = useState(\"Ajay Ingle\");\n  return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: user,\n    children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n      children: [\"Use Context : \", `Hello {$user}`]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 12\n    }, this), /*#__PURE__*/_jsxDEV(C2, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 12\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, this);\n};\n\n_s(C1, \"SHPVwEl9cuyL5v0Ahy0XeMqjgdw=\");\n\n_c = C1;\n\nconst C2 = () => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n      children: \"I am C2...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(C3, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_c2 = C2;\n\nconst C3 = () => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n      children: \"I am C3...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(C4, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_c3 = C3;\n\nconst C4 = () => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n      children: \"I am C4...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(C5, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_c4 = C4;\n\nconst C5 = () => {\n  _s2();\n\n  const user = useContext(UserContext);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Component 5\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: `Hello ${user} again!`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true);\n};\n\n_s2(C5, \"T/slviYl6xUb2nQaiedYLY1KgOo=\");\n\n_c5 = C5;\nexport default C1;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"C1\");\n$RefreshReg$(_c2, \"C2\");\n$RefreshReg$(_c3, \"C3\");\n$RefreshReg$(_c4, \"C4\");\n$RefreshReg$(_c5, \"C5\");","map":{"version":3,"names":["React","useContext","C1","user","setUser","useState","C2","C3","C4","C5","UserContext"],"sources":["F:/ReactJs/learnreact/src/components/UseContextHookEx.js"],"sourcesContent":["import React from 'react'\r\nimport { useContext } from 'react';\r\n\r\n// React Context is a way to manage state globally.\r\n//State should be held by the highest parent component in the stack that requires access to the state.\r\n//To illustrate, we have many nested components. The component at the top and bottom of the stack need access to the state.\r\n// To do this without Context, we will need to pass the state as \"props\" through each nested component. This is called \"prop drilling\".\r\n// c1 (parent), c2, c3, c4,c5 => you need data from parent to c5 so use context rather than passing all props in all child.\r\n\r\nconst C1 = () => {\r\n    const [user, setUser] = useState(\"Ajay Ingle\");\r\n    return (\r\n        <UserContext.Provider value={user}>\r\n           <h5>Use Context : {`Hello {$user}`}</h5>\r\n           <C2/>\r\n        </UserContext.Provider>\r\n    );\r\n}\r\n\r\nconst C2 = () => {\r\n    return (\r\n        <>\r\n            <h5>I am C2...</h5>\r\n            <C3/>\r\n        </>\r\n    );\r\n}\r\n\r\nconst C3 = () => {\r\n    return (\r\n        <>\r\n            <h5>I am C3...</h5>\r\n            <C4/>\r\n        </>\r\n    );\r\n}\r\n\r\nconst C4 = () => {\r\n    return (\r\n        <>\r\n            <h5>I am C4...</h5>\r\n            <C5/>\r\n        </>\r\n    );\r\n}\r\n\r\nconst C5 = () => {\r\n    const user = useContext(UserContext);\r\n    return (\r\n        <>\r\n          <h1>Component 5</h1>\r\n          <h2>{`Hello ${user} again!`}</h2>\r\n        </>\r\n      );\r\n}\r\n\r\n\r\nexport default C1;"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,OAA3B,C,CAEA;AACA;AACA;AACA;AACA;;;;;AAEA,MAAMC,EAAE,GAAG,MAAM;EAAA;;EACb,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBC,QAAQ,CAAC,YAAD,CAAhC;EACA,oBACI,QAAC,WAAD,CAAa,QAAb;IAAsB,KAAK,EAAEF,IAA7B;IAAA,wBACG;MAAA,6BAAoB,eAApB;IAAA;MAAA;MAAA;MAAA;IAAA,QADH,eAEG,QAAC,EAAD;MAAA;MAAA;MAAA;IAAA,QAFH;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAMH,CARD;;GAAMD,E;;KAAAA,E;;AAUN,MAAMI,EAAE,GAAG,MAAM;EACb,oBACI;IAAA,wBACI;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ,eAEI,QAAC,EAAD;MAAA;MAAA;MAAA;IAAA,QAFJ;EAAA,gBADJ;AAMH,CAPD;;MAAMA,E;;AASN,MAAMC,EAAE,GAAG,MAAM;EACb,oBACI;IAAA,wBACI;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ,eAEI,QAAC,EAAD;MAAA;MAAA;MAAA;IAAA,QAFJ;EAAA,gBADJ;AAMH,CAPD;;MAAMA,E;;AASN,MAAMC,EAAE,GAAG,MAAM;EACb,oBACI;IAAA,wBACI;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ,eAEI,QAAC,EAAD;MAAA;MAAA;MAAA;IAAA,QAFJ;EAAA,gBADJ;AAMH,CAPD;;MAAMA,E;;AASN,MAAMC,EAAE,GAAG,MAAM;EAAA;;EACb,MAAMN,IAAI,GAAGF,UAAU,CAACS,WAAD,CAAvB;EACA,oBACI;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAA,UAAM,SAAQP,IAAK;IAAnB;MAAA;MAAA;MAAA;IAAA,QAFF;EAAA,gBADJ;AAMH,CARD;;IAAMM,E;;MAAAA,E;AAWN,eAAeP,EAAf"},"metadata":{},"sourceType":"module"}