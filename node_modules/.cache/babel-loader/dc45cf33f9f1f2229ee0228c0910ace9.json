{"ast":null,"code":"var _jsxFileName = \"F:\\\\ReactJs\\\\learnreact\\\\src\\\\components\\\\UseCallbackHook.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useCallback } from 'react';\nimport { useState } from 'react'; // The React useCallback Hook returns a memoized callback function.\n//This allows us to isolate resource intensive functions so that they will not automatically run on every render.\n//The useCallback Hook only runs when one of its dependencies update.\n//This can improve performance.\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Diary = _ref => {\n  let {\n    diary,\n    addDiary\n  } = _ref;\n  console.log(\"Child render...\");\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n      children: \"My diary : \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }, this), diary.map((entry, i) => {\n      return /*#__PURE__*/_jsxDEV(\"h5\", {\n        children: entry + i\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 28\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addDiary,\n      children: \"Click me\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_c = Diary;\n\nconst UseCallbackHook = () => {\n  _s();\n\n  const [diary, setDiary] = useState([]);\n  const [val, setVal] = useState(0);\n  const addDiary = useCallback(() => {\n    setDiary(prev => [...prev, 'new Entry']);\n  }, [diary]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Diary, {\n      diary: diary,\n      addDiary: addDiary\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        setVal(val + 1);\n      },\n      children: [\"Click : \", val]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UseCallbackHook, \"x2Zgq4dRBbFCt444jdWsVsX96uQ=\");\n\n_c2 = UseCallbackHook;\nexport { UseCallbackHook, Diary };\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Diary\");\n$RefreshReg$(_c2, \"UseCallbackHook\");","map":{"version":3,"names":["React","useCallback","useState","Diary","diary","addDiary","console","log","map","entry","i","UseCallbackHook","setDiary","val","setVal","prev"],"sources":["F:/ReactJs/learnreact/src/components/UseCallbackHook.js"],"sourcesContent":["import React from 'react'\r\nimport { useCallback } from 'react'\r\nimport { useState } from 'react'\r\n\r\n// The React useCallback Hook returns a memoized callback function.\r\n//This allows us to isolate resource intensive functions so that they will not automatically run on every render.\r\n//The useCallback Hook only runs when one of its dependencies update.\r\n//This can improve performance.\r\n\r\nconst Diary = ({diary ,addDiary}) => {\r\n    console.log(\"Child render...\")\r\n    return(\r\n        <>\r\n        <h5>My diary : </h5>\r\n            {\r\n                diary.map((entry,i)=>{\r\n                   return  <h5 key={i}>{entry + i}</h5>\r\n                })\r\n            }\r\n        <button onClick={addDiary}>Click me</button>\r\n        </>\r\n    )\r\n}\r\n\r\nconst UseCallbackHook = () => {\r\n\r\n  const [diary,setDiary] = useState([]);\r\n  const [val,setVal] = useState(0);\r\n  \r\n  const addDiary = useCallback(()=>{\r\n    setDiary((prev)=>[...prev,'new Entry']);\r\n  },[diary]);\r\n\r\n  return (\r\n    <div>\r\n        <Diary diary={diary} addDiary={addDiary}/>\r\n        <hr/>\r\n        <button onClick={()=>{setVal(val+1)}}>Click : {val}</button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport {UseCallbackHook,Diary}"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,OAA5B;AACA,SAASC,QAAT,QAAyB,OAAzB,C,CAEA;AACA;AACA;AACA;;;;;AAEA,MAAMC,KAAK,GAAG,QAAuB;EAAA,IAAtB;IAACC,KAAD;IAAQC;EAAR,CAAsB;EACjCC,OAAO,CAACC,GAAR,CAAY,iBAAZ;EACA,oBACI;IAAA,wBACA;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADA,EAGQH,KAAK,CAACI,GAAN,CAAU,CAACC,KAAD,EAAOC,CAAP,KAAW;MAClB,oBAAQ;QAAA,UAAaD,KAAK,GAAGC;MAArB,GAASA,CAAT;QAAA;QAAA;QAAA;MAAA,QAAR;IACF,CAFD,CAHR,eAOA;MAAQ,OAAO,EAAEL,QAAjB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAPA;EAAA,gBADJ;AAWH,CAbD;;KAAMF,K;;AAeN,MAAMQ,eAAe,GAAG,MAAM;EAAA;;EAE5B,MAAM,CAACP,KAAD,EAAOQ,QAAP,IAAmBV,QAAQ,CAAC,EAAD,CAAjC;EACA,MAAM,CAACW,GAAD,EAAKC,MAAL,IAAeZ,QAAQ,CAAC,CAAD,CAA7B;EAEA,MAAMG,QAAQ,GAAGJ,WAAW,CAAC,MAAI;IAC/BW,QAAQ,CAAEG,IAAD,IAAQ,CAAC,GAAGA,IAAJ,EAAS,WAAT,CAAT,CAAR;EACD,CAF2B,EAE1B,CAACX,KAAD,CAF0B,CAA5B;EAIA,oBACE;IAAA,wBACI,QAAC,KAAD;MAAO,KAAK,EAAEA,KAAd;MAAqB,QAAQ,EAAEC;IAA/B;MAAA;MAAA;MAAA;IAAA,QADJ,eAEI;MAAA;MAAA;MAAA;IAAA,QAFJ,eAGI;MAAQ,OAAO,EAAE,MAAI;QAACS,MAAM,CAACD,GAAG,GAAC,CAAL,CAAN;MAAc,CAApC;MAAA,uBAA+CA,GAA/C;IAAA;MAAA;MAAA;MAAA;IAAA,QAHJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAOD,CAhBD;;GAAMF,e;;MAAAA,e;AAkBN,SAAQA,eAAR,EAAwBR,KAAxB"},"metadata":{},"sourceType":"module"}