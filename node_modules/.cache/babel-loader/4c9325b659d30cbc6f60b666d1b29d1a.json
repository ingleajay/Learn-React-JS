{"ast":null,"code":"var _jsxFileName = \"F:\\\\ReactJs\\\\learnreact\\\\src\\\\components\\\\UseReducerHookEx.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React from 'react';\nimport { useEffect } from 'react';\nimport { useReducer } from 'react'; //The useReducer Hook is similar to the useState Hook.\n//It allows for custom state logic.\n//If you find yourself keeping track of multiple pieces of state that rely on complex logic, useReducer may be useful.\n//useReducer(<reducer>, <initialState>)\n//The reducer function contains your custom state logic and the initialStatecan be a simple value but generally will contain an object.\n//The useReducer Hook returns the current stateand a dispatchmethod.\n// working  : we have state used manage state of variable and dispatcher is used for dispatched your actions \n// and make use by state \n// Example 1 : \n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst initialState = 0;\n\nconst reducer = (state, action) => {\n  if (action.type == \"inc\") {\n    return state + 1;\n  }\n\n  if (action.type == \"dec\") {\n    return state - 1;\n  }\n\n  return state;\n};\n\nconst UseReducerHookEx = () => {\n  _s();\n\n  const [state, dispatch] = useReducer(reducer, initialState);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: [\"Use Reducer : \", state]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => dispatch({\n        type: \"inc\"\n      }),\n      children: \"Incr\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => dispatch({\n        type: \"dec\"\n      }),\n      children: \"Decr\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}; // Example 2 : \n\n\n_s(UseReducerHookEx, \"UrEkDPQH5U12xnblC9PjDJeyoVE=\");\n\n_c = UseReducerHookEx;\nconst initialTodos = [{\n  id: 1,\n  title: \"Todo 1\",\n  complete: false\n}, {\n  id: 2,\n  title: \"Todo 2\",\n  complete: false\n}];\n\nconst reducer1 = (state, action) => {\n  switch (action.type) {\n    case \"COMPLETE\":\n      return state.map(todo => {\n        if (todo.id === action.id) {\n          return { ...todo,\n            complete: !todo.complete\n          };\n        } else {\n          return todo;\n        }\n      });\n\n    default:\n      return state;\n  }\n};\n\nconst Todos = () => {\n  _s2();\n\n  const [todos, dispatch] = useReducer(reducer1, initialTodos);\n\n  const handleComplete = todo => {\n    dispatch({\n      type: \"COMPLETE\",\n      id: todo.id\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: todos.map(todo => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: todo.complete,\n          onChange: () => handleComplete(todo)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 17\n        }, this), todo.title]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 15\n      }, this)\n    }, todo.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this))\n  }, void 0, false);\n};\n\n_s2(Todos, \"u4TrVHogQ4fo59FxNWf+bVaAFRg=\");\n\n_c2 = Todos;\nexport { UseReducerHookEx, Todos };\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"UseReducerHookEx\");\n$RefreshReg$(_c2, \"Todos\");","map":{"version":3,"names":["React","useEffect","useReducer","initialState","reducer","state","action","type","UseReducerHookEx","dispatch","initialTodos","id","title","complete","reducer1","map","todo","Todos","todos","handleComplete"],"sources":["F:/ReactJs/learnreact/src/components/UseReducerHookEx.js"],"sourcesContent":["import React from 'react'\r\nimport { useEffect } from 'react';\r\nimport { useReducer } from 'react'\r\n\r\n//The useReducer Hook is similar to the useState Hook.\r\n//It allows for custom state logic.\r\n//If you find yourself keeping track of multiple pieces of state that rely on complex logic, useReducer may be useful.\r\n\r\n\r\n//useReducer(<reducer>, <initialState>)\r\n//The reducer function contains your custom state logic and the initialStatecan be a simple value but generally will contain an object.\r\n//The useReducer Hook returns the current stateand a dispatchmethod.\r\n\r\n// working  : we have state used manage state of variable and dispatcher is used for dispatched your actions \r\n// and make use by state \r\n\r\n// Example 1 : \r\nconst initialState = 0;\r\nconst reducer = (state,action) => {\r\n    if(action.type == \"inc\"){\r\n        return (state+1);\r\n    }\r\n    if(action.type == \"dec\"){\r\n        return (state-1);\r\n    }\r\n\r\n    return state;\r\n}\r\n\r\nconst UseReducerHookEx = () => {\r\n\r\n  const [state,dispatch] = useReducer(reducer,initialState);\r\n\r\n  return (\r\n    <>\r\n    <h4>Use Reducer : {state}</h4>\r\n    <button onClick={()=>dispatch({type:\"inc\"})}>Incr</button>\r\n    <button onClick={()=>dispatch({type:\"dec\"})}>Decr</button>\r\n    </>\r\n  )\r\n}\r\n\r\n// Example 2 : \r\nconst initialTodos = [\r\n    {\r\n      id: 1,\r\n      title: \"Todo 1\",\r\n      complete: false,\r\n    },\r\n    {\r\n      id: 2,\r\n      title: \"Todo 2\",\r\n      complete: false,\r\n    },\r\n];\r\n\r\nconst reducer1 = (state,action) => {\r\n    switch (action.type) {\r\n        case \"COMPLETE\":\r\n          return state.map((todo) => {\r\n            if (todo.id === action.id) {\r\n                \r\n              return { ...todo, complete: !todo.complete };\r\n              \r\n            } else {\r\n              return todo;\r\n            }\r\n          });\r\n        default:\r\n          return state;\r\n      }\r\n    \r\n}\r\n\r\nconst Todos = () => {\r\n    const [todos, dispatch] = useReducer(reducer1, initialTodos);\r\n    const handleComplete = (todo) => {\r\n        dispatch({ type: \"COMPLETE\", id: todo.id });\r\n    };\r\n\r\n    return (\r\n        <>\r\n          {todos.map((todo) => (\r\n            <div key={todo.id}>\r\n              <label>\r\n                <input\r\n                  type=\"checkbox\"\r\n                  checked={todo.complete}\r\n                  onChange={() => handleComplete(todo)}\r\n                />\r\n                {todo.title}\r\n              </label>\r\n            </div>\r\n          ))}\r\n        </>\r\n      );\r\n}\r\n\r\nexport {UseReducerHookEx,Todos};"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,UAAT,QAA2B,OAA3B,C,CAEA;AACA;AACA;AAGA;AACA;AACA;AAEA;AACA;AAEA;;;;AACA,MAAMC,YAAY,GAAG,CAArB;;AACA,MAAMC,OAAO,GAAG,CAACC,KAAD,EAAOC,MAAP,KAAkB;EAC9B,IAAGA,MAAM,CAACC,IAAP,IAAe,KAAlB,EAAwB;IACpB,OAAQF,KAAK,GAAC,CAAd;EACH;;EACD,IAAGC,MAAM,CAACC,IAAP,IAAe,KAAlB,EAAwB;IACpB,OAAQF,KAAK,GAAC,CAAd;EACH;;EAED,OAAOA,KAAP;AACH,CATD;;AAWA,MAAMG,gBAAgB,GAAG,MAAM;EAAA;;EAE7B,MAAM,CAACH,KAAD,EAAOI,QAAP,IAAmBP,UAAU,CAACE,OAAD,EAASD,YAAT,CAAnC;EAEA,oBACE;IAAA,wBACA;MAAA,6BAAmBE,KAAnB;IAAA;MAAA;MAAA;MAAA;IAAA,QADA,eAEA;MAAQ,OAAO,EAAE,MAAII,QAAQ,CAAC;QAACF,IAAI,EAAC;MAAN,CAAD,CAA7B;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAFA,eAGA;MAAQ,OAAO,EAAE,MAAIE,QAAQ,CAAC;QAACF,IAAI,EAAC;MAAN,CAAD,CAA7B;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAHA;EAAA,gBADF;AAOD,CAXD,C,CAaA;;;GAbMC,gB;;KAAAA,gB;AAcN,MAAME,YAAY,GAAG,CACjB;EACEC,EAAE,EAAE,CADN;EAEEC,KAAK,EAAE,QAFT;EAGEC,QAAQ,EAAE;AAHZ,CADiB,EAMjB;EACEF,EAAE,EAAE,CADN;EAEEC,KAAK,EAAE,QAFT;EAGEC,QAAQ,EAAE;AAHZ,CANiB,CAArB;;AAaA,MAAMC,QAAQ,GAAG,CAACT,KAAD,EAAOC,MAAP,KAAkB;EAC/B,QAAQA,MAAM,CAACC,IAAf;IACI,KAAK,UAAL;MACE,OAAOF,KAAK,CAACU,GAAN,CAAWC,IAAD,IAAU;QACzB,IAAIA,IAAI,CAACL,EAAL,KAAYL,MAAM,CAACK,EAAvB,EAA2B;UAEzB,OAAO,EAAE,GAAGK,IAAL;YAAWH,QAAQ,EAAE,CAACG,IAAI,CAACH;UAA3B,CAAP;QAED,CAJD,MAIO;UACL,OAAOG,IAAP;QACD;MACF,CARM,CAAP;;IASF;MACE,OAAOX,KAAP;EAZN;AAeH,CAhBD;;AAkBA,MAAMY,KAAK,GAAG,MAAM;EAAA;;EAChB,MAAM,CAACC,KAAD,EAAQT,QAAR,IAAoBP,UAAU,CAACY,QAAD,EAAWJ,YAAX,CAApC;;EACA,MAAMS,cAAc,GAAIH,IAAD,IAAU;IAC7BP,QAAQ,CAAC;MAAEF,IAAI,EAAE,UAAR;MAAoBI,EAAE,EAAEK,IAAI,CAACL;IAA7B,CAAD,CAAR;EACH,CAFD;;EAIA,oBACI;IAAA,UACGO,KAAK,CAACH,GAAN,CAAWC,IAAD,iBACT;MAAA,uBACE;QAAA,wBACE;UACE,IAAI,EAAC,UADP;UAEE,OAAO,EAAEA,IAAI,CAACH,QAFhB;UAGE,QAAQ,EAAE,MAAMM,cAAc,CAACH,IAAD;QAHhC;UAAA;UAAA;UAAA;QAAA,QADF,EAMGA,IAAI,CAACJ,KANR;MAAA;QAAA;QAAA;QAAA;MAAA;IADF,GAAUI,IAAI,CAACL,EAAf;MAAA;MAAA;MAAA;IAAA,QADD;EADH,iBADJ;AAgBH,CAtBD;;IAAMM,K;;MAAAA,K;AAwBN,SAAQT,gBAAR,EAAyBS,KAAzB"},"metadata":{},"sourceType":"module"}