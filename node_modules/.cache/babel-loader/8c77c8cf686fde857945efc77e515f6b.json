{"ast":null,"code":"var _jsxFileName = \"F:\\\\ReactJs\\\\learnreact\\\\src\\\\components\\\\Hooks\\\\UseEffectHookEx.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState } from 'react';\nimport { useEffect } from 'react'; //The useEffect Hook allows you to perform side effects in your components.\n//Some examples of side effects are: fetching data, directly updating the DOM, and timers.\n//useEffect accepts two arguments. The second argument is optional.\n//useEffect(<function>, <dependency>)\n// 1. No dependency passed:\n// useEffect(() => {\n//   //Runs on every render\n// });\n// 2. An empty array:\n// useEffect(() => {\n//   //Runs only on the first render\n// }, []);\n// 3. Props or state values:\n// useEffect(() => {\n//   //Runs on the first render\n//   //And any time any dependency value changes\n// }, [prop, state]);\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst UseEffectHookEx = () => {\n  _s();\n\n  const [count, setCount] = useState(0);\n  const [count1, setCount1] = useState(0); //   useEffect(()=>{\n  //     alert(\"I am clicked\");\n  //   })\n  //   useEffect(()=>{\n  //     alert(\"I am clicked\");\n  //   },[])\n\n  useEffect(() => {\n    alert(\"I am clicked\");\n  }, [count]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        setCount(count + 1);\n      },\n      children: count\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        setCount1(count1 + 1);\n      },\n      children: count1\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n\n_s(UseEffectHookEx, \"qCuHc+eIVWtKxakgovpVvv6fE20=\");\n\n_c = UseEffectHookEx;\nexport default UseEffectHookEx;\n\nvar _c;\n\n$RefreshReg$(_c, \"UseEffectHookEx\");","map":{"version":3,"names":["React","useState","useEffect","UseEffectHookEx","count","setCount","count1","setCount1","alert"],"sources":["F:/ReactJs/learnreact/src/components/Hooks/UseEffectHookEx.js"],"sourcesContent":["import React from 'react'\r\nimport { useState } from 'react';\r\nimport { useEffect } from 'react';\r\n\r\n//The useEffect Hook allows you to perform side effects in your components.\r\n//Some examples of side effects are: fetching data, directly updating the DOM, and timers.\r\n//useEffect accepts two arguments. The second argument is optional.\r\n//useEffect(<function>, <dependency>)\r\n\r\n// 1. No dependency passed:\r\n// useEffect(() => {\r\n//   //Runs on every render\r\n// });\r\n\r\n// 2. An empty array:\r\n// useEffect(() => {\r\n//   //Runs only on the first render\r\n// }, []);\r\n\r\n// 3. Props or state values:\r\n// useEffect(() => {\r\n//   //Runs on the first render\r\n//   //And any time any dependency value changes\r\n// }, [prop, state]);\r\n\r\nconst UseEffectHookEx = () => {\r\n\r\n  const [count, setCount] = useState(0);\r\n  const [count1, setCount1] = useState(0);\r\n\r\n//   useEffect(()=>{\r\n//     alert(\"I am clicked\");\r\n//   })\r\n\r\n//   useEffect(()=>{\r\n//     alert(\"I am clicked\");\r\n//   },[])\r\n\r\nuseEffect(()=>{\r\n    alert(\"I am clicked\");\r\n  },[count])\r\n\r\n  return(\r\n    <>\r\n    <button onClick={()=>{setCount(count+1)}}>{count}</button>\r\n    <button onClick={()=>{setCount1(count1+1)}}>{count1}</button>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default UseEffectHookEx"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,SAAT,QAA0B,OAA1B,C,CAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;;;;AAEA,MAAMC,eAAe,GAAG,MAAM;EAAA;;EAE5B,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,CAAD,CAAlC;EACA,MAAM,CAACK,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAAC,CAAD,CAApC,CAH4B,CAK9B;EACA;EACA;EAEA;EACA;EACA;;EAEAC,SAAS,CAAC,MAAI;IACVM,KAAK,CAAC,cAAD,CAAL;EACD,CAFM,EAEL,CAACJ,KAAD,CAFK,CAAT;EAIE,oBACE;IAAA,wBACA;MAAQ,OAAO,EAAE,MAAI;QAACC,QAAQ,CAACD,KAAK,GAAC,CAAP,CAAR;MAAkB,CAAxC;MAAA,UAA2CA;IAA3C;MAAA;MAAA;MAAA;IAAA,QADA,eAEA;MAAQ,OAAO,EAAE,MAAI;QAACG,SAAS,CAACD,MAAM,GAAC,CAAR,CAAT;MAAoB,CAA1C;MAAA,UAA6CA;IAA7C;MAAA;MAAA;MAAA;IAAA,QAFA;EAAA,gBADF;AAMD,CAvBD;;GAAMH,e;;KAAAA,e;AAyBN,eAAeA,eAAf"},"metadata":{},"sourceType":"module"}