{"ast":null,"code":"var _jsxFileName = \"F:\\\\ReactJs\\\\learnreact\\\\src\\\\components\\\\UseReducerHookEx.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useReducer } from 'react'; //The useReducer Hook is similar to the useState Hook.\n//It allows for custom state logic.\n//If you find yourself keeping track of multiple pieces of state that rely on complex logic, useReducer may be useful.\n//useReducer(<reducer>, <initialState>)\n//The reducer function contains your custom state logic and the initialStatecan be a simple value but generally will contain an object.\n//The useReducer Hook returns the current stateand a dispatchmethod.\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst initialState = 0;\n\nconst reducer = (state, action) => {\n  if (action.type == \"inc\") {\n    return state + 1;\n  }\n\n  if (action.type == \"dec\") {\n    return state - 1;\n  }\n\n  return state;\n};\n\nconst UseReducerHookEx = () => {\n  _s();\n\n  const [state, dispatch] = useReducer(reducer, initialState);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: [\"Use Reducer : \", state]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => dispatch({\n        type: \"inc\"\n      }),\n      children: \"Incr\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => dispatch({\n        type: \"dec\"\n      }),\n      children: \"Decr\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n\n_s(UseReducerHookEx, \"UrEkDPQH5U12xnblC9PjDJeyoVE=\");\n\n_c = UseReducerHookEx;\nexport default UseReducerHookEx;\n\nvar _c;\n\n$RefreshReg$(_c, \"UseReducerHookEx\");","map":{"version":3,"names":["React","useReducer","initialState","reducer","state","action","type","UseReducerHookEx","dispatch"],"sources":["F:/ReactJs/learnreact/src/components/UseReducerHookEx.js"],"sourcesContent":["import React from 'react'\r\nimport { useReducer } from 'react'\r\n\r\n//The useReducer Hook is similar to the useState Hook.\r\n//It allows for custom state logic.\r\n//If you find yourself keeping track of multiple pieces of state that rely on complex logic, useReducer may be useful.\r\n\r\n\r\n//useReducer(<reducer>, <initialState>)\r\n//The reducer function contains your custom state logic and the initialStatecan be a simple value but generally will contain an object.\r\n//The useReducer Hook returns the current stateand a dispatchmethod.\r\n\r\n\r\nconst initialState = 0;\r\nconst reducer = (state,action) => {\r\n    if(action.type == \"inc\"){\r\n        return (state+1);\r\n    }\r\n    if(action.type == \"dec\"){\r\n        return (state-1);\r\n    }\r\n\r\n    return state;\r\n}\r\n\r\nconst UseReducerHookEx = () => {\r\n\r\n  const [state,dispatch] = useReducer(reducer,initialState);\r\n\r\n  return (\r\n    <>\r\n    <h4>Use Reducer : {state}</h4>\r\n    <button onClick={()=>dispatch({type:\"inc\"})}>Incr</button>\r\n    <button onClick={()=>dispatch({type:\"dec\"})}>Decr</button>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default UseReducerHookEx"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,OAA3B,C,CAEA;AACA;AACA;AAGA;AACA;AACA;;;;AAGA,MAAMC,YAAY,GAAG,CAArB;;AACA,MAAMC,OAAO,GAAG,CAACC,KAAD,EAAOC,MAAP,KAAkB;EAC9B,IAAGA,MAAM,CAACC,IAAP,IAAe,KAAlB,EAAwB;IACpB,OAAQF,KAAK,GAAC,CAAd;EACH;;EACD,IAAGC,MAAM,CAACC,IAAP,IAAe,KAAlB,EAAwB;IACpB,OAAQF,KAAK,GAAC,CAAd;EACH;;EAED,OAAOA,KAAP;AACH,CATD;;AAWA,MAAMG,gBAAgB,GAAG,MAAM;EAAA;;EAE7B,MAAM,CAACH,KAAD,EAAOI,QAAP,IAAmBP,UAAU,CAACE,OAAD,EAASD,YAAT,CAAnC;EAEA,oBACE;IAAA,wBACA;MAAA,6BAAmBE,KAAnB;IAAA;MAAA;MAAA;MAAA;IAAA,QADA,eAEA;MAAQ,OAAO,EAAE,MAAII,QAAQ,CAAC;QAACF,IAAI,EAAC;MAAN,CAAD,CAA7B;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAFA,eAGA;MAAQ,OAAO,EAAE,MAAIE,QAAQ,CAAC;QAACF,IAAI,EAAC;MAAN,CAAD,CAA7B;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAHA;EAAA,gBADF;AAOD,CAXD;;GAAMC,gB;;KAAAA,gB;AAaN,eAAeA,gBAAf"},"metadata":{},"sourceType":"module"}